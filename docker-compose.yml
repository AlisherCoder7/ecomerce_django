services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000  # Django server to accept requests from all IPs
    volumes:
      - .:/app  # Mount the current directory to the /app directory in the container
    ports:
      - "8000:8000"  # Map local port 8000 to container port 8000
    env_file:
      - .env
#    depends_on:
#      - db
#    environment:
#      - DATABASE_HOST=127.0.0.1
#      - DATABASE_PORT=5432
#      - DATABASE_NAME=postgres
#      - DATABASE_USER=postgres
#      - DATABASE_PASSWORD=root
#
#  db:
#    image: postgres:17.1
#    environment:
#      POSTGRES_DB: postgres
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: root
#    ports:
#      - "5432:5432"  # Expose PostgreSQL default port
#    volumes:
#      - postgres_data:/var/lib/postgresql/data  # Persist database data

  rabbitmq:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"  # RabbitMQ default communication port
      - "15672:15672"  # RabbitMQ management console port

  redis:
    image: redis:latest
    ports:
      - "6379:6379"  # Redis default port

  celery:
    build: .
    command: celery -A django_rest_framework worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
#
#volumes:
#  postgres_data:
#    driver: local  # Ensure PostgreSQL data is persistent

networks:
  default:
    external:
      name: mynetwork
